# Autogenerated param section. Do not hand edit.
param {
group.0 {
name=Dynamically Reconfigurable Parameters
desc=See the [[dynamic_reconfigure]] package for details on dynamically reconfigurable parameters.
0.name= ~ip_mode
0.default= 2
0.type= int
0.desc=ip_mode value determines the method used by the device to determine its own IP and network conÔ¨Åguration. Possible values are: static (0): Static IP mode, dhcp (1): DHCP IP mode, autoip (2): AutoIP mode
1.name= ~ip_address
1.default= 10.0.10.9
1.type= str
1.desc=IP address 
2.name= ~subnet_mask
2.default= 255.0.0.0
2.type= str
2.desc=IP netmask 
3.name= ~gateway
3.default= 0.0.0.0
3.type= str
3.desc=IP gateway 
4.name= ~scan_frequency
4.default= 35
4.type= int
4.desc=The parameter scan_frequency defines the set point for the rotational speed of the sensor head and therefore the number of scans recorded per second. For the R2000 valid values range from 10 Hz to 50 Hz with steps of 1 Hz. Range: 10 to 50
5.name= ~scan_direction
5.default= ccw
5.type= str
5.desc=The parameter scan_direction defines the direction of rotation of the sensors head. User applications can choose between clockwise rotation (cw) or counter-clockwise rotation (ccw). Possible values are: cw (cw): Clock-wise, ccw (ccw): Counter clock-wise
6.name= ~samples_per_scan
6.default= 3600
6.type= int
6.desc=The parameter samples_per_scan defines the number of samples recorded during one revolution of the sensor head (for details please refer to section 3.1 in the R2000 Ethernet communication protocol). Range: 72 to 25200
7.name= ~hmi_display_mode
7.default= static_logo
7.type= str
7.desc=The parameter hmi_display_mode controls the content of the HMI LED display during normal operation, i.e. while neither warnings nor errors are displayed and the user did not activate the HMI menu. Possible values are: hmi_display_off (off): , static_logo (static_logo): , static_text (static_text): , bargraph_distance (bargraph_distance): , bargraph_echo (bargraph_echo): , bargraph_reflector (bargraph_reflector): , application_bitmap (application_bitmap): , application_text (application_text): 
8.name= ~hmi_language
8.default= english
8.type= str
8.desc=change display language Possible values are: english (english): , german (german): 
9.name= ~hmi_button_lock
9.default= off
9.type= str
9.desc=lock HMI buttons Possible values are: hmi_button_lock_on (on): hmi button lock on, hmi_button_lock_off (off): hmi button lock off
10.name= ~hmi_parameter_lock
10.default= off
10.type= str
10.desc=set HMI to read-only Possible values are: hmi_parameter_lock_on (on): hmi parameter lock on, hmi_parameter_lock_off (off): hmi parameter lock off
11.name= ~hmi_static_text_1
11.default= Pepperl+Fuchs
11.type= str
11.desc=text line 1 for mode static_text (max. 30 chars) 
12.name= ~hmi_static_text_2
12.default= R2000
12.type= str
12.desc=text line 2 for mode static_text (max. 30 chars) 
13.name= ~locator_indication
13.default= off
13.type= str
13.desc=LED locator indication Possible values are: locator_indicator_on (on): locator indicator on, locator_indicator_off (off): locator indicator off
14.name= ~operating_mode
14.default= measure
14.type= str
14.desc=The operating_mode, always measure after power on, can be temporarily set to emitter_off to disable the laser pulse, e.g. in order to avoid affecting other scanners. Possible values are: measure (measure): measure mode, emitter_off (emitter_off): emitter_off mode
15.name= ~address
15.default= 
15.type= str
15.desc=When initiating scan data output, request_handle_udp must be given an IPv4 address and port in order to know where to send scandata to. 
16.name= ~port
16.default= 0
16.type= int
16.desc=See address Range: -2147483648 to 2147483647
17.name= ~packet_type
17.default= A
17.type= str
17.desc=Packet type for scan data output Possible values are: packet_type_A (A): packet type A, packet_type_B (B): packet type B, packet_type_C (C): packettype C
18.name= ~packet_crc
18.default= 
18.type= str
18.desc=Append extra CRC32 for scan data integrity check 
19.name= ~watchdog
19.default= off
19.type= str
19.desc=Cease scan data output if watchdog isn't fed in time Possible values are: watchdog_on (on): watchdog on, watchdog_off (off): watchdog off
20.name= ~watchdogtimeout
20.default= 60000
20.type= int
20.desc=Maximum time for client to feed watchdog Range: -2147483648 to 2147483647
21.name= ~start_angle
21.default= -1800000.0
21.type= double
21.desc=angle of first scan point for scan data output Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
22.name= ~max_num_points_scan
22.default= 0
22.type= int
22.desc=limit number of points in scan data output Range: -2147483648 to 2147483647
23.name= ~skip_scans
23.default= 0
23.type= int
23.desc=reduce scan output rate to every (n+1)th scan Range: -2147483648 to 2147483647
24.name= ~user_tag
24.default= 
24.type= str
24.desc=User defined name (max. 32 chars) 
25.name= ~user_notes
25.default= 
25.type= str
25.desc=User notes (max. 1000 Byte) 
}
}
# End of autogenerated section. You may edit below.
